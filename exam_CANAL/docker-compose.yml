# pas de version en docker compose v2
# on pourrait également définir un "include" pour les données répétées à réutiliser dans chaque service 
# - variables d'env
# - volumes binding
services:
  fastapi:
    image: datascientest/fastapi:1.0.0
    container_name: my_fastapi_container_from_compose
    networks:
      - my_network_from_compose
    ports:
      - "8000:8000"
  test_authentication:
    image: my_authentication_test_image:1.0.0
    container_name: my_authentication_test_container_from_compose
    networks:
      - my_network_from_compose
    environment:
      LOG: 1
      # on utilise la resolution DNS du network partagé
      API_ADDRESS: "my_fastapi_container_from_compose"
      API_PORT: 8000
    volumes:
      - ./logs:/tests/logs
    restart: "no"
    # le service fastapi doit être démarré (au moins) avant de lancer les test
    depends_on:
      - fastapi
  test_authorization:
    image: my_authorization_test_image:1.0.0
    container_name: my_authorization_test_container_from_compose
    networks:
      - my_network_from_compose
    environment:
      LOG: 1
      # on utilise la resolution DNS du network partagé
      API_ADDRESS: "my_fastapi_container_from_compose"
      API_PORT: 8000
    volumes:
      - ./logs:/tests/logs
    restart: "no"
    # le service fastapi doit être démarré (au moins) avant de lancer les test
    depends_on:
      - fastapi
  test_content:
    image: my_content_test_image:1.0.0
    container_name: my_content_test_container_from_compose
    networks:
      - my_network_from_compose
    environment:
      LOG: 1
      # on utilise la resolution DNS du network partagé
      API_ADDRESS: "my_fastapi_container_from_compose"
      API_PORT: 8000
    volumes:
      - ./logs:/tests/logs
    restart: "no"
    # le service fastapi doit être démarré (au moins) avant de lancer les test
    depends_on:
      - fastapi
# network dédié partagé par les 4 containers
networks:
  my_network_from_compose: